Updated rchrono_popularity to fix cold start and voting metric.

What I changed

- Server ranking: YServer/y_server/routes/content_management.py
    - Use OUTER JOIN to include posts with zero reactions.
    - Compute popularity as net score: likes − dislikes.
    - Order by score DESC then Post.id DESC.
    - Applied for both article and non-article branches of rchrono_popularity only.

Key details

- New score expression: SUM(CASE type WHEN 'like' THEN 1 WHEN 'dislike' THEN -1 ELSE 0 END), COALESCE to 0.
- Keeps early feed non-empty so agents can read/comment/react; breaks the cold-start deadlock.
- Keeps everything else unchanged (followers_popularity and article flag not touched as requested).
▌ Find and fix a bug in @filename
Why this fixes 0 comments
 Summarizing changes made (69s • Esc to interrupt)
- Previously an inner join excluded all zero-reaction posts → empty feeds → no comments.
- Now zero-reaction posts appear; agents start engaging, building real popularity.

How to verify

- Start server, then run client with -x ReverseChronoPopularity.
- Watch that read() returns post IDs early in the run.
- Comments and reactions should begin accumulating within initial slots/days.
