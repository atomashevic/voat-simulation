
------------------------------------------------------------
Network Analysis with Core-Periphery Detection for Simulation: Sample_7
------------------------------------------------------------

Date: 2025-08-12 17:00:22
Input data: /home/socio/ysocial-simulations/MADOC/reddit-technology/sample_7/technology_sample_7.parquet
[1/5] Loading posts data...
  - Loaded 21939 posts
[2/5] Building network...
  - Added 15221 nodes (users)
  - Created 20806 edges (comments)
  - Normalizing edge weights...
[3/5] Calculating network statistics...
260 0.00015747728742458408
[4/5] Running core-periphery detection using stochastic block model...
  - Initializing HubSpokeCorePeriphery model...
  - Inferring core-periphery structure...
  - Extracting core-periphery labels...
  - Performing model selection...
  - Minimum description length (MDL): 165593.2103
  - Core size: 4 nodes
  - Periphery size: 16252 nodes
  - Saving core-periphery membership to CSV...
[5/5] Creating network visualizations...
  - Visualizing core-periphery structure...
  - Extracting largest connected component for visualization...
  - Limited visualization to top 500 nodes by weighted degree
  - Visualizing network with 500 nodes and 1894 edges
  - Computing network layout...
  - Core: 4 nodes, Periphery: 496 nodes
  - Extracting largest connected component for visualization...
  - Limited visualization to top 500 nodes by weighted degree
  - Visualizing network with 500 nodes and 1894 edges
  - Detecting communities...
  - Computing network layout...
  - Detected 19 communities
  - Creating full network visualization with core-periphery coloring...
  - Core: 4 nodes, Periphery: 16252 nodes
  - Computing k-core decomposition for layout...
  - Network has cores from 1 to 6
  - Computing network layout for full visualization with increased repulsion...
  - Drawing edges...
  - Drawing core nodes...
  - Drawing periphery nodes...
  - Creating degree distribution plots...

Network Analysis with Core-Periphery Detection Complete!

Network Statistics:
- Num Nodes: 16256
- Num Edges: 20806
- Is Directed: False
- Is Connected: False
- Avg Degree: 2.5597933070866143
- Avg Weighted Degree: 0.1893015326209224
- Avg Clustering: 0.00064605701994814
- Num Components: 260
- Density: 0.00015747728742458408
- Largest Component Size: 15858
- Largest Component Ratio: 0.9755167322834646

Core-Periphery Detection Results:
- Minimum Description Length (MDL): 165593.2103
- Core Size: 4 nodes (0.02% of network)
- Periphery Size: 16252 nodes (99.98% of network)

Top 10 Core Nodes by Weighted Degree:
- User 410bfd81-ee41-5213-a7e4-34869d935ecb: 212.5000
- User f8b3e16d-539b-53fd-97d7-f0ec4ae4b1a0: 115.6429
- User 410f9cfa-ccc9-551b-98ea-987ab30b5d71: 100.5000
- User f9e60073-fb72-50eb-a88d-cb7c759ec7db: 69.0714

Core-periphery membership exported to: /home/socio/ysocial-simulations/MADOC/reddit-technology/sample_7/core_periphery_membership.csv
Core-periphery visualization saved to: /home/socio/ysocial-simulations/MADOC/reddit-technology/sample_7/core_periphery_visualization.png
Network visualization saved to: /home/socio/ysocial-simulations/MADOC/reddit-technology/sample_7/network_visualization.png
Full network visualization saved to: /home/socio/ysocial-simulations/MADOC/reddit-technology/sample_7/core-periphery-full-network.png
Degree distribution plots saved to: /home/socio/ysocial-simulations/MADOC/reddit-technology/sample_7/degree_distribution.png (and others)
Network statistics saved to: /home/socio/ysocial-simulations/MADOC/reddit-technology/sample_7/network_stats_cp.txt
